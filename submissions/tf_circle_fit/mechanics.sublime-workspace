{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"n",
				"n\tstatement"
			],
			[
				"i",
				"i\tstatement"
			],
			[
				"y",
				"y"
			],
			[
				"w_max",
				"w_max\tparam"
			],
			[
				"trees",
				"trees"
			],
			[
				"spli",
				"split_node"
			],
			[
				"s",
				"score"
			],
			[
				"to_c",
				"to_csv\tfunction"
			],
			[
				"b",
				"b"
			],
			[
				"d",
				"delete"
			],
			[
				"prin",
				"print_tree"
			],
			[
				"T",
				"TGraph"
			],
			[
				"same",
				"same"
			],
			[
				"masraf",
				"masraf"
			],
			[
				"h",
				"h"
			],
			[
				"get_",
				"get_score\tfunction"
			],
			[
				"get",
				"get_fscore\tfunction"
			],
			[
				"feature",
				"feature_importances_"
			],
			[
				"max",
				"max_features"
			]
		]
	},
	"buffers":
	[
		{
			"file": "regressor.py",
			"settings":
			{
				"buffer_size": 3477,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ts_feature_extractor.py",
			"settings":
			{
				"buffer_size": 1208,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import os\nimport numpy as np\nimport pandas as pd\nimport rampwf as rw\nimport xarray as xr\n\nproblem_title =\\\n    'Prediction of the azimuth of Mars'\n\n_n_lookahead = 50\n_n_burn_in = 500\n_filename = 'test_angles_perfect_circle_nview10_n1M.csv'\n_target = 'phi'\n# Need better error messages for invalid input parameters\n_debug_time_series = False\n\nPredictions = rw.prediction_types.make_regression(\n    label_names=[_target])\n\n# El Nino, a.k.a. [TimeSeries, FeatureExtractor, Regressor]\nworkflow = rw.workflows.Mechanics(\n    check_sizes=[_n_burn_in + 30], check_indexs=[_n_burn_in + 1])\n\nscore_types = [\n    rw.score_types.RelativeRMSE(name='rel_rmse', precision=3)\n]\n\n\n# CV implemented here:\ndef get_cv(X, y):\n    n = len(y)\n#    train_is = np.arange(0, int(n / 2))\n#    test_is = np.arange(int(n / 2), n)\n    train_is = np.arange(0, int(n / 2))\n    test_is = np.arange(0, int(n / 2))\n    yield (train_is, test_is)\n\n\n# Both train and test targets are stripped off the first\n# n_burn_in entries\ndef _read_data(path, filename):\n    data_df = pd.read_csv(os.path.join(path, 'data', filename)).loc[::1]\n    data_array = data_df.drop(\n        ['time'], axis=1).values[0:- _n_burn_in - _n_lookahead:].reshape(-1)\n\n    # x = y to debug look-up times\n    if(_debug_time_series):\n        data_array = np.arange(0., len(data_array))\n    time = data_df['time'].values[0:- _n_burn_in - _n_lookahead:].reshape(-1)\n    data_xr = xr.DataArray(\n        data_array, coords=[('time', time)], dims=('time'))\n    data_ds = xr.Dataset({'phi': data_xr})\n    data_ds.attrs = {'n_burn_in': _n_burn_in, 'n_lookahead': _n_lookahead}\n\n    y_array = data_df[_target].values.reshape(-1, 1)\n    y_array = y_array[_n_burn_in + _n_lookahead:]\n\n    print(\"y_array : \", y_array.shape, \" : \", y_array)\n    print(\"data_ds : \", data_ds)\n    # x = y to debug look-up times\n    if(_debug_time_series):\n        y_array = np.arange(0., len(data_array)).reshape(-1, 1)\n    return data_ds, y_array\n\n\ndef get_train_data(path='.'):\n    for ds in [\"sysFSS1_planet0\"]:\n\n\n    data_ds, y_array = _read_data(\n        path,\n        \"phis_nview_sysFSS0_planet1_nview100_nsim200000.csv\")\n    return data_ds, y_array\n\n\ndef get_test_data(path='.'):\n    data_ds, y_array = _read_data(\n        path,\n        \"phis_nview_sysFSS0_planet2_nview100_nsim200000.csv\")\n    return data_ds, y_array\n",
			"file": "/Users/yetkin/ramp/ramp-kits/mechanics/problem.py",
			"file_size": 2292,
			"file_write_time": 131765669360000000,
			"settings":
			{
				"buffer_size": 2329,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "fit_features.py",
			"settings":
			{
				"buffer_size": 1888,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/yetkin/ramp/ramp-workflow/rampwf/workflows/mechanics.py",
			"settings":
			{
				"buffer_size": 2648,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 167.0,
		"last_filter": "insta",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/yetkin/ramp/ramp-workflow/rampwf/workflows/mechanics.py",
		"/Users/yetkin/kepler/ConvertTimeSeries.py",
		"/Users/yetkin/ramp/ramp-kits/kaggle_seguro/submissions/formulas/print_formulas.py",
		"/Users/yetkin/ramp/ramp-kits/kaggle_seguro/submissions/formulas/print.sh",
		"/Users/yetkin/ramp/ramp-kits/kaggle_seguro/submissions/formulas/run.sh",
		"/Users/yetkin/ramp/TrackML3D/scoring/score.py",
		"/Users/yetkin/ramp/TrackML3D/trackml/scores.py",
		"/Users/yetkin/ramp/ramp-kits/kaggle_seguro/submissions/simple_keras/classifier.py",
		"/Users/yetkin/ramp/ramp-kits/kaggle_seguro/submissions/formulas/EvolveTrees.py",
		"/Users/yetkin/ramp/tracking/produce.py",
		"/Users/yetkin/ramp/ramp-kits/kaggle_seguro/submissions/formulas/FormulaTree.py",
		"/Users/yetkin/ramp/ramp-kits/kaggle_seguro/submissions/formulas/feature_extractor.py",
		"/Users/yetkin/ramp/ramp-kits/kaggle_seguro/submissions/formulas/GenerateTrees.py",
		"/Users/yetkin/ramp/tracking/user_test_submission.py",
		"/Users/yetkin/ramp/ramp-kits/kaggle_seguro/submissions/formulas/GenerateTrees",
		"/Users/yetkin/ramp/ramp-kits/kaggle_seguro/submissions/formulas/formulate.py",
		"/Users/yetkin/ramp/hep_anomalies/feature_extractors.py",
		"/Users/yetkin/ramp/ramp-kits/kaggle_seguro/submissions/starting_kit/formulate.py",
		"/Users/yetkin/ramp/ramp-kits/mars_craters/workflow/scores/_draw.py",
		"/Users/yetkin/ramp/ramp-kits/mars_craters/workflow/tests/test_scores.py",
		"/Users/yetkin/ramp/ramp-workflow/rampwf/utils/testing.py",
		"/Users/yetkin/ramp/ramp-kits/mars_craters/workflow/scores/_circles.py",
		"/Users/yetkin/ramp/ramp-kits/mars_craters/workflow/scores/scp.py",
		"/Users/yetkin/ramp/ramp-kits/mars_craters/workflow/workflow.py",
		"/Users/yetkin/ramp/ramp-kits/mars_craters/workflow/scores/ospa.py",
		"/Users/yetkin/ramp/ramp-kits/mars_craters/problem.py",
		"/Users/yetkin/ramp/tracking/Simulate.py",
		"/Users/yetkin/nogozon/convertTXTtoROOT.C",
		"/Users/yetkin/nogozon/plot.C",
		"/Users/yetkin/ramp/hep_anomalies/analyze.C",
		"/Users/yetkin/ramp/hep_anomalies/classify.C",
		"/Users/yetkin/ramp/hep_anomalies/convertAll.C",
		"/Users/yetkin/ramp/hep_anomalies/convertTXTtoROOT.C",
		"/Users/yetkin/ramp/hep_anomalies/print_figures.C",
		"/Users/yetkin/ramp/hep_anomalies/feature_extractors_all.py",
		"/Users/yetkin/ramp/ramp-kits/HEP_tracking/simulation/simulate.py",
		"/Users/yetkin/ramp/ramp-kits/HEP_tracking/simulation/produce.py",
		"/Users/yetkin/ramp/ramp-kits/HEP_tracking/simulation/transform.py",
		"/Users/yetkin/ramp/hep_anomalies/higgsml_opendata_tmva.py",
		"/Users/yetkin/ramp/hep_anomalies/run.py",
		"/Users/yetkin/Downloads/higgsml_opendata_tmva.py",
		"/Users/yetkin/translate/trans.sh",
		"/Users/yetkin/ramp/symbolica/fit_track.py",
		"/Users/yetkin/ramp/atlas_m1/feature_extractors.py",
		"/Users/yetkin/Downloads/travis.yml",
		"/Users/yetkin/ramp/ramp-kits/HEP_tracking/README.md",
		"/Users/yetkin/ramp/ramp-data/HEP_tracking/prepare_data.py",
		"/Users/yetkin/ramp/ramp-kits/HEP_tracking/simulation/README.md",
		"/Users/yetkin/ramp/ramp-kits/HEP_tracking/simulation/Simulate.py",
		"/Users/yetkin/Downloads/higgsml_opendata_manip_hsframp_v3.py",
		"/Users/yetkin/ramp/tracking/Transform.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"pri",
			"return acc",
			"acc ",
			"histo",
			"relative_cylindrical",
			"relative_cartesian",
			"planet",
			"planets",
			"planet",
			"n_sample",
			"coef",
			"get_coef",
			"error_fu",
			"forma",
			"data",
			"make_va",
			"X[",
			"score",
			"print_tre",
			"operations",
			"print",
			"npar",
			"random",
			"print",
			"outputFileNameCSV",
			"isske",
			"int(",
			"deposit",
			"propagate_numeric",
			"update",
			"print"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"return force ",
			"force ",
			"cylindrical_relative",
			"cartesian_relative",
			"bodies"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "regressor.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3477,
						"regions":
						{
						},
						"selection":
						[
							[
								181,
								181
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "ts_feature_extractor.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1208,
						"regions":
						{
						},
						"selection":
						[
							[
								589,
								589
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/yetkin/ramp/ramp-kits/mechanics/problem.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2329,
						"regions":
						{
						},
						"selection":
						[
							[
								1983,
								2018
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 506.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "fit_features.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1888,
						"regions":
						{
						},
						"selection":
						[
							[
								323,
								323
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/yetkin/ramp/ramp-workflow/rampwf/workflows/mechanics.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2648,
						"regions":
						{
						},
						"selection":
						[
							[
								2402,
								2402
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 395.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "mechanics.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
